public class OSIS_PayFlowPro {
    
    private String USER;
    private String VENDOR;
    private String PWD;
    private String PARTNER;
    private String ENDPOINT;
    
    public OSIS_PayFlowPro() {
        USER = Label.OSIS_PayPal_User;
        VENDOR = Label.OSIS_PayPal_Vendor;
        PWD = Label.OSIS_PayPal_Password;
        PARTNER = Label.OSIS_PayPal_Partner;
        ENDPOINT = Label.OSIS_PayPal_Endpoint;
    }
    
    public OSIS_PayPalResponse verifyAccountDetails (String cardNumber, String expDate, String CVV, String firstName, String lastName, String billToStreet, 
                                                     String billToCity, String billToState, String billToCountry, String billToZip) {        
                                                         String requestBody;
                                                         String [] responseBody;
                                                         HTTPResponse myHTTPResponse;
                                                         OSIS_PayPalResponse myPayPalResponse = new OSIS_PayPalResponse();
                                                         
                                                         try{
                                                             requestBody = createBody('A', 'C', USER, VENDOR, PWD, PARTNER, cardNumber, expDate, '0', 'OSIsoft account authorization for ' + firstName + ' ' + lastName,
                                                                                      firstName, lastName, billToStreet, billToCity, billToState, billToZip, billToCountry, CVV, 'HIGH', null);
                                                             
                                                             myHTTPResponse = sendRequest(requestBody);
                                                             responseBody = (myHTTPResponse.getBody()).split('&');
                                                             
                                                             myPayPalResponse.transactionID = responseBody[1].replace('PNREF=','');
                                                             
                                                             if (responseBody[2].replace('RESPMSG=','') == 'Verified')                       
                                                                 myPayPalResponse.result = true;
                                                             else
                                                                 myPayPalResponse.result = false;
                                                             
                                                             myPayPalResponse.resultCode = responseBody[0].replace('RESULT=', '');
                                                             myPayPalResponse.responseMsg = responseBody[2].replace('RESPMSG=', '');       
                                                             
                                                             return myPayPalResponse;   
                                                         }
                                                         Catch(exception e){
                                                             myPayPalResponse.responseMsg=e.getMessage();
                                                                         OSIS_CreateErrorLog.logException('payFlow',e,false);

                                                             return myPayPalResponse;   
                                                         }
                                                         
                                                         
                                                     }
    
    public OSIS_PayPalResponse storeAccountDetails (String cardNumber, String expDate, String CVV, String firstName, String lastName, String billToStreet, 
                                                    String billToCity, String billToState, String billToCountry, String billToZip) {        
                                                        String requestBody;
                                                        String [] responseBody;
                                                        OSIS_PayPalResponse myPayPalResponse = new OSIS_PayPalResponse();
                                                        
                                                        try{
                                                            HTTPResponse myHTTPResponse;
                                                            
                                                            requestBody = createBody('L', 'C', USER, VENDOR, PWD, PARTNER, cardNumber, expDate, '0', 'OSIsoft account detail store for ' + firstName + ' ' + lastName,
                                                                                     firstName, lastName, billToStreet, billToCity, billToState, billToZip, billToCountry, CVV, 'HIGH', null);
                                                            
                                                            myHTTPResponse = sendRequest(requestBody);
                                                            responseBody = (myHTTPResponse.getBody()).split('&');
                                                            
                                                            myPayPalResponse.transactionID = responseBody[1].replace('PNREF=','');
                                                            
                                                            if (responseBody[2].replace('RESPMSG=','') == 'Approved')                       
                                                                myPayPalResponse.result = true;
                                                            else
                                                                myPayPalResponse.result = false;
                                                            
                                                            myPayPalResponse.resultCode = responseBody[0].replace('RESULT=', '');
                                                            myPayPalResponse.responseMsg = responseBody[2].replace('RESPMSG=', '');       
                                                            
                                                            return myPayPalResponse;  
                                                        }
                                                        Catch(exception e){
                                                            myPayPalResponse.responseMsg=e.getMessage();
                                                            OSIS_CreateErrorLog.logException('payFlow',e,false);
                                                            
                                                            return myPayPalResponse;   
                                                        }
                                                    }
    
    public OSIS_PayPalResponse authorizeTransaction (String amt, String origID) {        
        String requestBody;
        String [] responseBody;
        String transactionID;
        HTTPResponse myHTTPResponse;
        OSIS_PayPalResponse myPayPalResponse = new OSIS_PayPalResponse();
        
        requestBody = createBody('A', 'C', USER, VENDOR, PWD, PARTNER, null, null, amt, 'OSIsoft payment authorization for transaction ID ' + origID ,
                                 null, null, null, null, null, null, null, null, 'HIGH', origID);
        
        myHTTPResponse = sendRequest(requestBody);
        responseBody = (myHTTPResponse.getBody()).split('&');
        
        myPayPalResponse.transactionID = responseBody[1].replace('PNREF=','');
        
        if (responseBody[2].replace('RESPMSG=','') == 'Approved')                       
            myPayPalResponse.result = true;
        else
            myPayPalResponse.result = false;
        
        myPayPalResponse.resultCode = responseBody[0].replace('RESULT=', '');
        myPayPalResponse.responseMsg = responseBody[2].replace('RESPMSG=', '');                                   
        
        return myPayPalResponse;                       
    }
    
    public OSIS_PayPalResponse captureTransaction (String origID) {        
        String requestBody;
        String [] responseBody;
        String transactionID;
        HTTPResponse myHTTPResponse;
        OSIS_PayPalResponse myPayPalResponse = new OSIS_PayPalResponse();                         
        
        requestBody = createBody('D', 'C', USER, VENDOR, PWD, PARTNER, null, null, null, 'OSIsoft delayed capture for transaction ID ' + origID,
                                 null, null, null, null, null, null, null, null, 'HIGH', origID);
        
        myHTTPResponse = sendRequest(requestBody);
        responseBody = (myHTTPResponse.getBody()).split('&');
        
        myPayPalResponse.transactionID = responseBody[1].replace('PNREF=','');
        
        if (responseBody[2].replace('RESPMSG=','') == 'Approved')                       
            myPayPalResponse.result = true;
        else
            myPayPalResponse.result = false;
        
        myPayPalResponse.resultCode = responseBody[0].replace('RESULT=', '');
        myPayPalResponse.responseMsg = responseBody[2].replace('RESPMSG=', ''); 
        
        return myPayPalResponse;                                   
    }
    
    public OSIS_PayPalResponse voidTransaction (String origID) {        
        String requestBody;
        String [] responseBody;
        String transactionID;
        HTTPResponse myHTTPResponse;
        OSIS_PayPalResponse myPayPalResponse = new OSIS_PayPalResponse();
        
        requestBody = createBody('V', 'C', USER, VENDOR, PWD, PARTNER, null, null, null, 'OSIsoft void authorization for transaction ID ' + origID,
                                 null, null, null, null, null, null, null, null, 'HIGH', origID);
        
        myHTTPResponse = sendRequest(requestBody);
        responseBody = (myHTTPResponse.getBody()).split('&');
        
        myPayPalResponse.transactionID = responseBody[1].replace('PNREF=','');
        
        if (responseBody[2].replace('RESPMSG=','') == 'Approved')                       
            myPayPalResponse.result = true;
        else
            myPayPalResponse.result = false;
        
        myPayPalResponse.resultCode = responseBody[0].replace('RESULT=', '');
        myPayPalResponse.responseMsg = responseBody[2].replace('RESPMSG=', ''); 
        
        return myPayPalResponse;                                
    }
    
    public String createBody(String TRXTYPE, String TENDER, String USER, String VENDOR, String PWD, String PARTNER, String ACCT, String EXPDATE, String AMT, String COMMENT1,
                             String BILLTOFIRSTNAME, String BILLTOLASTNAME, String BILLTOSTREET, String BILLTOCITY, String BILLTOSTATE, String BILLTOZIP, String BILLTOCOUNTRY,
                             String CVV2, String VERBOSITY, String ORIGID) {
                                 
                                 String requestBody = 'TRXTYPE[' + TRXTYPE.length() + ']=' + TRXTYPE + '&TENDER[' + TENDER.length() + ']=' + TENDER + '&USER[' + USER.length() + ']=' + USER +  
                                     '&VENDOR[' + VENDOR.length() + ']=' + VENDOR + '&PWD[' + PWD.length() + ']=' + PWD + '&PARTNER[' + PARTNER.length() + ']=' + PARTNER;
                                 
                                 if ( ACCT != null )
                                     requestBody = requestBody + '&ACCT[' + ACCT.length() + ']=' + ACCT;
                                 
                                 if ( EXPDATE != null )
                                     requestBody = requestBody + '&EXPDATE[' + EXPDATE.length() + ']=' + EXPDATE;
                                 
                                 if ( AMT != null )
                                     requestBody = requestBody + '&AMT[' + AMT.length() + ']=' + AMT;
                                 
                                 if ( COMMENT1 != null )
                                     requestBody = requestBody + '&COMMENT1[' + COMMENT1.length() + ']=' + COMMENT1;
                                 
                                 if ( BILLTOFIRSTNAME != null )
                                     requestBody = requestBody + '&BILLTOFIRSTNAME[' + BILLTOFIRSTNAME.length() + ']=' + BILLTOFIRSTNAME;
                                 
                                 if ( BILLTOLASTNAME != null )
                                     requestBody = requestBody + '&BILLTOLASTNAME[' + BILLTOLASTNAME.length() + ']=' + BILLTOLASTNAME;
                                 
                                 if ( BILLTOSTREET != null )
                                     requestBody = requestBody + '&BILLTOSTREET[' + BILLTOSTREET.length() + ']=' + BILLTOSTREET;
                                 
                                 if ( BILLTOCITY != null )
                                     requestBody = requestBody + '&BILLTOCITY[' + BILLTOCITY.length() + ']=' + BILLTOCITY;
                                 
                                 if ( BILLTOSTATE != null )
                                     requestBody = requestBody + '&BILLTOSTATE[' + BILLTOSTATE.length() + ']=' + BILLTOSTATE;
                                 
                                 if ( BILLTOZIP != null )
                                     requestBody = requestBody + '&BILLTOZIP[' + BILLTOZIP.length() + ']=' + BILLTOZIP;
                                 
                                 if ( BILLTOCOUNTRY != null )
                                     requestBody = requestBody + '&BILLTOCOUNTRY[' + BILLTOCOUNTRY.length() + ']=' + BILLTOCOUNTRY;
                                 
                                 if ( CVV2 != null )
                                     requestBody = requestBody + '&CVV2[' + CVV2.length() + ']=' + CVV2;
                                 
                                 if ( VERBOSITY != null )
                                     requestBody = requestBody + '&VERBOSITY[' + VERBOSITY.length() + ']=' + VERBOSITY;              
                                 
                                 if ( ORIGID != null ) 
                                     requestBody = requestBody + '&ORIGID[' + ORIGID.length() + ']=' + ORIGID;
                                 
                                 return requestBody;
                             }   
    
    public HTTPResponse sendRequest(String requestBody) {
        HTTP myHTTP = new HTTP();
        HTTPRequest myHTTPRequest = new HTTPRequest();
        HTTPResponse myHTTPResponse = new HTTPResponse();
        
        String myTokenID = generateRandomString(32);
        myHTTPRequest.setEndpoint(ENDPOINT);
        myHTTPRequest.setMethod('POST'); 
        myHTTPRequest.setHeader('Content-Type', 'text/name value');
        myHTTPRequest.setHeader('Content-Length', String.valueOf(requestBody.length()));
        myHTTPRequest.setHeader('Host', ENDPOINT);
        myHTTPRequest.setHeader('X-VPS-REQUEST-ID', myTokenID);
        myHTTPRequest.setHeader('X-VPS-CLIENT-TIMEOUT', String.valueOf(45));
        myHTTPRequest.setBody(requestBody);
        
        myHTTPResponse = myHTTP.send(myHTTPRequest);
        
        return myHTTPResponse;
    }
    
    public static String generateRandomString(Integer len) {
        final String chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz';
        String randStr = '';
        while (randStr.length() < len) {
            Integer idx = Math.mod(Math.abs(Crypto.getRandomInteger()), chars.length());
            randStr += chars.substring(idx, idx+1);
        }
        return randStr; 
    }
    
}